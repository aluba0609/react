{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u9879\\u76EE\\\\vue\\\\git\\\\my-react\\\\src\\\\component\\\\hello\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport hello from './index.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Hello extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        btn: '点我提示左侧的数据',\n        placeholderLeft: '点我提示数据',\n        placeholderRight: '失去焦点提示数据'\n      }\n    };\n    this.myRef = /*#__PURE__*/React.createRef();\n\n    this.btn = () => {\n      console.log(this.myRef.current.value);\n    };\n  }\n\n  //调用后可以返回一个容器 该容器可以存储被ref所表示的节点\n  render() {\n    //createRef形式ref \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hello.helloClass\",\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.myRef,\n        type: \"text\",\n        placeholder: this.state.data.placeholderLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.myRef,\n        type: \"text\",\n        placeholder: this.state.data.placeholderLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.btn,\n        children: this.state.data.btn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/项目/vue/git/my-react/src/component/hello/index.jsx"],"names":["React","Component","hello","Hello","state","data","btn","placeholderLeft","placeholderRight","myRef","createRef","console","log","current","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SACzCG,KADyC,GACjC;AACJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,GAAG,EAAE,WADH;AAEFC,QAAAA,eAAe,EAAE,QAFf;AAGFC,QAAAA,gBAAgB,EAAE;AAHhB;AADF,KADiC;AAAA,SAkCzCC,KAlCyC,gBAkCnCT,KAAK,CAACU,SAAN,EAlCmC;;AAAA,SAgDzCJ,GAhDyC,GAgDnC,MAAM;AACRK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,KAA/B;AACH,KAlDwC;AAAA;;AAkClB;AACvBC,EAAAA,MAAM,GAAG;AAAC;AACF,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,GAAG,EAAE,KAAKN,KAAjB;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWC,IAAX,CAAgBE;AAAjE;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,GAAG,EAAE,KAAKE,KAAjB;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWC,IAAX,CAAgBE;AAAjE;AAAA;AAAA;AAAA;AAAA,cALJ,eAOI;AAAQ,QAAA,OAAO,EAAE,KAAKD,GAAtB;AAAA,kBAA4B,KAAKF,KAAL,CAAWC,IAAX,CAAgBC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA/CoC","sourcesContent":["import React, { Component } from 'react'\r\nimport hello from './index.module.css'\r\nexport default class Hello extends Component {\r\n    state = {\r\n        data: {\r\n            btn: '点我提示左侧的数据',\r\n            placeholderLeft: '点我提示数据',\r\n            placeholderRight: '失去焦点提示数据'\r\n        }\r\n    }\r\n    // render() {//字符串形式ref\r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref='input1' type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //             <input type=\"text\" onFocus={this.btn} placeholder={this.state.data.placeholderRight} />\r\n    //         </div>\r\n\r\n    //     )\r\n    // }\r\n\r\n    // render() {//回调函数形式ref \r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref={(current) => { console.log(this.input1 = current) }} type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    myRef=React.createRef()//调用后可以返回一个容器 该容器可以存储被ref所表示的节点\r\n    render() {//createRef形式ref \r\n            return (\r\n                <div>\r\n                    <div className=\"hello.helloClass\">\r\n                        hello\r\n                    </div>\r\n                    <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n                    <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n\r\n                    <button onClick={this.btn}>{this.state.data.btn}</button>\r\n                </div>\r\n            )\r\n        }\r\n    btn = () => {\r\n        console.log(this.myRef.current.value)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}