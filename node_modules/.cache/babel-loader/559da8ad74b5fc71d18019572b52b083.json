{"ast":null,"code":"import React, { Component } from 'react'; // import hello from './index.module.css'\n\nexport default class Hello extends Component {// state = {\n  //     data: {\n  //         btn: '点我提示左侧的数据',\n  //         placeholderLeft: '点我提示数据',\n  //         placeholderRight: '失去焦点提示数据'\n  //     }\n  // }\n  // render() {//字符串形式ref\n  //     return (\n  //         <div>\n  //             <div className=\"hello.helloClass\">\n  //                 hello\n  //             </div>\n  //             <input ref='input1' type=\"text\" placeholder={this.state.data.placeholderLeft} />\n  //             <button onClick={this.btn}>{this.state.data.btn}</button>\n  //             <input type=\"text\" onFocus={this.btn} placeholder={this.state.data.placeholderRight} />\n  //         </div>\n  //     )\n  // }\n  // render() {//回调函数形式ref \n  //     return (\n  //         <div>\n  //             <div className=\"hello.helloClass\">\n  //                 hello\n  //             </div>\n  //             <input ref={(current) => { console.log(this.input1 = current) }} type=\"text\" placeholder={this.state.data.placeholderLeft} />\n  //             <button onClick={this.btn}>{this.state.data.btn}</button>\n  //         </div>\n  //     )\n  // }\n  // myRef = React.createRef()//调用后可以返回一个容器 该容器可以存储被ref所表示的节点\n  // render() {//createRef形式ref \n  //     return (\n  //         <div>\n  //             <div className=\"hello.helloClass\">\n  //                 hello\n  //             </div>\n  //             <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} />\n  //             {/* <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} /> */}\n  //             <button onClick={this.btn}>{this.state.data.btn}</button>\n  //         </div>\n  //     )\n  // }\n  // btn = () => {\n  //     console.log(this.myRef.current.value)\n  // }\n  // handSubmit=(e)=>{\n  //     e.preventDefault()\n  //     const {username,passwork}=this\n  //     alert(`'账号'${username.value},'密码:',${passwork.value}`)\n  // }\n  // render(){\n  //     return (\n  //         <form action=\"http://www.atguigu.com\" onSubmit={this.handSubmit}>\n  //             用户名：<input ref={c=>this.username=c} type=\"text\" name='username'/>\n  //             密码：<input  ref={c=>this.passwork=c} type=\"passwork\" name='passwork'/>\n  //             <button>登录</button>\n  //         </form>\n  //     )\n  // }\n  // state={\n  //     username:\"\",\n  //     passwork:\"\",\n  // }\n  // handSubmit=(e)=>{\n  //     e.preventDefault()\n  //     const {username,passwork}=this.state\n  //     alert(`'账号'${username},'密码:',${passwork}`)\n  // }\n  // saveUserName=(e)=>{\n  //     this.setState({username:e.target.value})\n  // }\n  // savePassWork=(e)=>{\n  //     this.setState({passwork:e.target.value})\n  // }\n  // render(){\n  //     return (\n  //         <form action=\"http://www.atguigu.com\" onSubmit={this.handSubmit}>\n  //             用户名：<input onChange={this.saveUserName} type=\"text\" name='username'/>\n  //             密码：<input  onChange={this.savePassWork} type=\"passwork\" name='passwork'/>\n  //             <button>登录</button>\n  //         </form>\n  //     )\n  // }\n  // state = {\n  //     username: \"\",\n  //     passwork: \"\",\n  //     a:\"aaa\"\n  // }\n  // handSubmit = (e) => {\n  //     e.preventDefault()\n  //     const { username, passwork } = this.state\n  //     alert(`'账号'${username},'密码:',${passwork}`)\n  // }\n  // save = (type) => {\n  //     return (event) => {\n  //             this.setState({ [type]: event.target.value })\n  //     }\n  // }\n  // render() {\n  //     return (\n  //         <form action=\"http://www.atguigu.com\" onSubmit={this.handSubmit}>\n  //             用户名：<input onChange={this.save('username')} type=\"text\" name='username' />\n  //             密码：<input onChange={this.save('passwork')} type=\"passwork\" name='passwork' />\n  //             <button>登录</button>\n  //         </form>\n  //     )\n  // }\n}","map":{"version":3,"sources":["D:/项目/vue/git/my-react/src/component/hello/index.jsx"],"names":["React","Component","Hello"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B,CACzvHyC","sourcesContent":["import React, { Component } from 'react'\r\n// import hello from './index.module.css'\r\nexport default class Hello extends Component {\r\n    // state = {\r\n    //     data: {\r\n    //         btn: '点我提示左侧的数据',\r\n    //         placeholderLeft: '点我提示数据',\r\n    //         placeholderRight: '失去焦点提示数据'\r\n    //     }\r\n    // }\r\n    // render() {//字符串形式ref\r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref='input1' type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //             <input type=\"text\" onFocus={this.btn} placeholder={this.state.data.placeholderRight} />\r\n    //         </div>\r\n\r\n    //     )\r\n    // }\r\n\r\n    // render() {//回调函数形式ref \r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref={(current) => { console.log(this.input1 = current) }} type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    // myRef = React.createRef()//调用后可以返回一个容器 该容器可以存储被ref所表示的节点\r\n    // render() {//createRef形式ref \r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             {/* <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} /> */}\r\n\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n    // btn = () => {\r\n    //     console.log(this.myRef.current.value)\r\n    // }\r\n\r\n    // handSubmit=(e)=>{\r\n    //     e.preventDefault()\r\n    //     const {username,passwork}=this\r\n    //     alert(`'账号'${username.value},'密码:',${passwork.value}`)\r\n    // }\r\n    // render(){\r\n    //     return (\r\n    //         <form action=\"http://www.atguigu.com\" onSubmit={this.handSubmit}>\r\n    //             用户名：<input ref={c=>this.username=c} type=\"text\" name='username'/>\r\n    //             密码：<input  ref={c=>this.passwork=c} type=\"passwork\" name='passwork'/>\r\n    //             <button>登录</button>\r\n    //         </form>\r\n    //     )\r\n    // }\r\n\r\n\r\n\r\n    // state={\r\n    //     username:\"\",\r\n    //     passwork:\"\",\r\n    // }\r\n    // handSubmit=(e)=>{\r\n    //     e.preventDefault()\r\n    //     const {username,passwork}=this.state\r\n    //     alert(`'账号'${username},'密码:',${passwork}`)\r\n    // }\r\n    // saveUserName=(e)=>{\r\n    //     this.setState({username:e.target.value})\r\n    // }\r\n    // savePassWork=(e)=>{\r\n    //     this.setState({passwork:e.target.value})\r\n    // }\r\n    // render(){\r\n    //     return (\r\n    //         <form action=\"http://www.atguigu.com\" onSubmit={this.handSubmit}>\r\n    //             用户名：<input onChange={this.saveUserName} type=\"text\" name='username'/>\r\n    //             密码：<input  onChange={this.savePassWork} type=\"passwork\" name='passwork'/>\r\n    //             <button>登录</button>\r\n    //         </form>\r\n    //     )\r\n    // }\r\n\r\n\r\n    // state = {\r\n    //     username: \"\",\r\n    //     passwork: \"\",\r\n    //     a:\"aaa\"\r\n    // }\r\n    // handSubmit = (e) => {\r\n    //     e.preventDefault()\r\n    //     const { username, passwork } = this.state\r\n    //     alert(`'账号'${username},'密码:',${passwork}`)\r\n    // }\r\n    // save = (type) => {\r\n    //     return (event) => {\r\n    //             this.setState({ [type]: event.target.value })\r\n    //     }\r\n\r\n    // }\r\n    // render() {\r\n    //     return (\r\n    //         <form action=\"http://www.atguigu.com\" onSubmit={this.handSubmit}>\r\n    //             用户名：<input onChange={this.save('username')} type=\"text\" name='username' />\r\n    //             密码：<input onChange={this.save('passwork')} type=\"passwork\" name='passwork' />\r\n    //             <button>登录</button>\r\n    //         </form>\r\n    //     )\r\n    // }\r\n}"]},"metadata":{},"sourceType":"module"}