{"ast":null,"code":"import React, { Component } from 'react';\nimport hello from './index.module.css';\nexport default class Hello extends Component {// state = {\n  //     data: {\n  //         btn: '点我提示左侧的数据',\n  //         placeholderLeft: '点我提示数据',\n  //         placeholderRight: '失去焦点提示数据'\n  //     }\n  // }\n  // render() {//字符串形式ref\n  //     return (\n  //         <div>\n  //             <div className=\"hello.helloClass\">\n  //                 hello\n  //             </div>\n  //             <input ref='input1' type=\"text\" placeholder={this.state.data.placeholderLeft} />\n  //             <button onClick={this.btn}>{this.state.data.btn}</button>\n  //             <input type=\"text\" onFocus={this.btn} placeholder={this.state.data.placeholderRight} />\n  //         </div>\n  //     )\n  // }\n  // render() {//回调函数形式ref \n  //     return (\n  //         <div>\n  //             <div className=\"hello.helloClass\">\n  //                 hello\n  //             </div>\n  //             <input ref={(current) => { console.log(this.input1 = current) }} type=\"text\" placeholder={this.state.data.placeholderLeft} />\n  //             <button onClick={this.btn}>{this.state.data.btn}</button>\n  //         </div>\n  //     )\n  // }\n  // myRef = React.createRef()//调用后可以返回一个容器 该容器可以存储被ref所表示的节点\n  // render() {//createRef形式ref \n  //     return (\n  //         <div>\n  //             <div className=\"hello.helloClass\">\n  //                 hello\n  //             </div>\n  //             <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} />\n  //             {/* <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} /> */}\n  //             <button onClick={this.btn}>{this.state.data.btn}</button>\n  //         </div>\n  //     )\n  // }\n  // btn = () => {\n  //     console.log(this.myRef.current.value)\n  // }\n}","map":{"version":3,"sources":["D:/项目/vue/git/my-react/src/component/hello/index.jsx"],"names":["React","Component","hello","Hello"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B,CACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDyC","sourcesContent":["import React, { Component } from 'react'\r\nimport hello from './index.module.css'\r\nexport default class Hello extends Component {\r\n    // state = {\r\n    //     data: {\r\n    //         btn: '点我提示左侧的数据',\r\n    //         placeholderLeft: '点我提示数据',\r\n    //         placeholderRight: '失去焦点提示数据'\r\n    //     }\r\n    // }\r\n    // render() {//字符串形式ref\r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref='input1' type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //             <input type=\"text\" onFocus={this.btn} placeholder={this.state.data.placeholderRight} />\r\n    //         </div>\r\n\r\n    //     )\r\n    // }\r\n\r\n    // render() {//回调函数形式ref \r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref={(current) => { console.log(this.input1 = current) }} type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    // myRef = React.createRef()//调用后可以返回一个容器 该容器可以存储被ref所表示的节点\r\n    // render() {//createRef形式ref \r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             {/* <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} /> */}\r\n\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n    // btn = () => {\r\n    //     console.log(this.myRef.current.value)\r\n    // }\r\n\r\n\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}