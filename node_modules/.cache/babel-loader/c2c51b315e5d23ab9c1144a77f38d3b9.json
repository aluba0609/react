{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u9879\\u76EE\\\\vue\\\\git\\\\my-react\\\\src\\\\component\\\\hello\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport hello from './index.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Hello extends Component {\n  // state = {\n  //     data: {\n  //         btn: '点我提示左侧的数据',\n  //         placeholderLeft: '点我提示数据',\n  //         placeholderRight: '失去焦点提示数据'\n  //     }\n  // }\n  // render() {//字符串形式ref\n  //     return (\n  //         <div>\n  //             <div className=\"hello.helloClass\">\n  //                 hello\n  //             </div>\n  //             <input ref='input1' type=\"text\" placeholder={this.state.data.placeholderLeft} />\n  //             <button onClick={this.btn}>{this.state.data.btn}</button>\n  //             <input type=\"text\" onFocus={this.btn} placeholder={this.state.data.placeholderRight} />\n  //         </div>\n  //     )\n  // }\n  // render() {//回调函数形式ref \n  //     return (\n  //         <div>\n  //             <div className=\"hello.helloClass\">\n  //                 hello\n  //             </div>\n  //             <input ref={(current) => { console.log(this.input1 = current) }} type=\"text\" placeholder={this.state.data.placeholderLeft} />\n  //             <button onClick={this.btn}>{this.state.data.btn}</button>\n  //         </div>\n  //     )\n  // }\n  // myRef = React.createRef()//调用后可以返回一个容器 该容器可以存储被ref所表示的节点\n  // render() {//createRef形式ref \n  //     return (\n  //         <div>\n  //             <div className=\"hello.helloClass\">\n  //                 hello\n  //             </div>\n  //             <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} />\n  //             {/* <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} /> */}\n  //             <button onClick={this.btn}>{this.state.data.btn}</button>\n  //         </div>\n  //     )\n  // }\n  // btn = () => {\n  //     console.log(this.myRef.current.value)\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"http://www.atguigu.com\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\\u7528\\u6237\\u540D\",\n        children: [\"\\u7528\\u6237\\u540D\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\\u5BC6\\u7801\",\n        children: [\"\\u5BC6\\u7801\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"passWork\",\n          name: \"passWork\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/项目/vue/git/my-react/src/component/hello/index.jsx"],"names":["React","Component","hello","Hello","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAG,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAM,MAAA,MAAM,EAAC,wBAAb;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,oBAAf;AAAA,4DACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA,sDACG;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADH;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAjEwC","sourcesContent":["import React, { Component } from 'react'\r\nimport hello from './index.module.css'\r\nexport default class Hello extends Component {\r\n    // state = {\r\n    //     data: {\r\n    //         btn: '点我提示左侧的数据',\r\n    //         placeholderLeft: '点我提示数据',\r\n    //         placeholderRight: '失去焦点提示数据'\r\n    //     }\r\n    // }\r\n    // render() {//字符串形式ref\r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref='input1' type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //             <input type=\"text\" onFocus={this.btn} placeholder={this.state.data.placeholderRight} />\r\n    //         </div>\r\n\r\n    //     )\r\n    // }\r\n\r\n    // render() {//回调函数形式ref \r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref={(current) => { console.log(this.input1 = current) }} type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    // myRef = React.createRef()//调用后可以返回一个容器 该容器可以存储被ref所表示的节点\r\n    // render() {//createRef形式ref \r\n    //     return (\r\n    //         <div>\r\n    //             <div className=\"hello.helloClass\">\r\n    //                 hello\r\n    //             </div>\r\n    //             <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} />\r\n    //             {/* <input ref={this.myRef} type=\"text\" placeholder={this.state.data.placeholderLeft} /> */}\r\n\r\n    //             <button onClick={this.btn}>{this.state.data.btn}</button>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n    // btn = () => {\r\n    //     console.log(this.myRef.current.value)\r\n    // }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <form action=\"http://www.atguigu.com\">\r\n                <label htmlFor=\"用户名\">\r\n                用户名：<input type=\"text\" name='userName'/>\r\n                </label>\r\n                <label htmlFor=\"密码\">\r\n                密码：<input type=\"passWork\" name='passWork'/>\r\n                </label>\r\n                <button>登录</button>\r\n            </form>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}